/**
 * 
 */
package org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

/**
 * 
 */
class FacturaTest {

	private Factura factura;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeEach
	void setUp() throws Exception {
        factura = new Factura();

	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterEach
	void tearDown() throws Exception {
        factura = null;

	}

	/**
	 * Test method for
	 * {@link org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13.Factura#Factura()}.
	 */
	@Test
	void testFactura() {
        assertNotNull(factura);
        assertNotNull(factura.productos);
        assertTrue(factura.productos.size()==0);
	}

	/**
	 * Test method for
	 * {@link org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13.Factura#meterProducto(org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13.Producto)}.
	 */
	@Test
	void testMeterProducto() {
		Producto p = new Producto("pan", 0.50f, 1);
        factura.meterProducto(p);
        assertEquals(1, factura.productos.size());
        assertEquals(p, factura.productos.get(0));
	}

	/**
	 * Test method for
	 * {@link org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13.Factura#totalFactura()}.
	 */
	@Test
	void testTotalFactura() {
		Producto p1 = new Producto("pan", 0.50f, 1);
        Producto p2 = new Producto("leche", 1.20f, 2);
        factura.meterProducto(p1);
        factura.meterProducto(p2);
        assertEquals(2.90f, factura.totalFactura());
	}

	/**
	 * Test method for
	 * {@link org.cuatrovientos.dam.ed.DAM_ED_EntregaJUnit13.Factura#aplicarIva(float)}.
	 */
	@Test
	void testAplicarIva() {
		Producto p1 = new Producto("pan", 0.50f, 1);
        Producto p2 = new Producto("leche", 1.20f, 2);
        factura.meterProducto(p1);
        factura.meterProducto(p2);
        assertEquals(3.509f, factura.aplicarIva(21), 0.001);
	}

}
